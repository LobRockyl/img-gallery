// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render card 1`] = `
<ActionAreaCard
  detail="desc"
  id="1"
  image="url"
  name="img"
>
  <div
    className="relative m-2"
    data-testid="card-1"
  >
    <div
      onClick={[Function]}
    >
      <ForwardRef(Card)
        sx={
          Object {
            "maxWidth": 345,
          }
        }
      >
        <MuiCardRoot
          className="MuiCard-root"
          ownerState={
            Object {
              "children": Array [
                <ForwardRef(CardActionArea)>
                  <div
                    className="h-1/2 object-fit"
                  >
                    <ForwardRef(CardMedia)
                      alt="image"
                      component="img"
                      height="140"
                      image="url"
                    />
                  </div>
                  <ForwardRef(CardContent)>
                    <ForwardRef(Typography)
                      component="div"
                      gutterBottom={true}
                      id="test1"
                      variant="h5"
                    >
                      img
                    </ForwardRef(Typography)>
                    <ForwardRef(Typography)
                      color="text.secondary"
                      variant="body1"
                    >
                      desc
                    </ForwardRef(Typography)>
                  </ForwardRef(CardContent)>
                </ForwardRef(CardActionArea)>,
                <div
                  className="cursor-pointer"
                >
                  <Memo
                    onClick={[Function]}
                  />
                  <Memo
                    onClick={[Function]}
                  />
                </div>,
              ],
              "raised": false,
              "sx": Object {
                "maxWidth": 345,
              },
            }
          }
          sx={
            Object {
              "maxWidth": 345,
            }
          }
        >
          <Noop />
          <ForwardRef(Paper)
            className="MuiCard-root css-1427d4b-MuiCard-root"
          >
            <MuiPaperRoot
              as="div"
              className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 MuiCard-root css-1427d4b-MuiCard-root"
              ownerState={
                Object {
                  "children": Array [
                    <ForwardRef(CardActionArea)>
                      <div
                        className="h-1/2 object-fit"
                      >
                        <ForwardRef(CardMedia)
                          alt="image"
                          component="img"
                          height="140"
                          image="url"
                        />
                      </div>
                      <ForwardRef(CardContent)>
                        <ForwardRef(Typography)
                          component="div"
                          gutterBottom={true}
                          id="test1"
                          variant="h5"
                        >
                          img
                        </ForwardRef(Typography)>
                        <ForwardRef(Typography)
                          color="text.secondary"
                          variant="body1"
                        >
                          desc
                        </ForwardRef(Typography)>
                      </ForwardRef(CardContent)>
                    </ForwardRef(CardActionArea)>,
                    <div
                      className="cursor-pointer"
                    >
                      <Memo
                        onClick={[Function]}
                      />
                      <Memo
                        onClick={[Function]}
                      />
                    </div>,
                  ],
                  "className": "MuiCard-root css-1427d4b-MuiCard-root",
                  "component": "div",
                  "elevation": 1,
                  "square": false,
                  "variant": "elevation",
                }
              }
            >
              <Noop />
              <div
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 MuiCard-root css-1ri6ub7-MuiPaper-root-MuiCard-root"
              >
                <ForwardRef(CardActionArea)>
                  <MuiCardActionAreaRoot
                    className="MuiCardActionArea-root"
                    focusVisibleClassName=""
                    ownerState={
                      Object {
                        "children": Array [
                          <div
                            className="h-1/2 object-fit"
                          >
                            <ForwardRef(CardMedia)
                              alt="image"
                              component="img"
                              height="140"
                              image="url"
                            />
                          </div>,
                          <ForwardRef(CardContent)>
                            <ForwardRef(Typography)
                              component="div"
                              gutterBottom={true}
                              id="test1"
                              variant="h5"
                            >
                              img
                            </ForwardRef(Typography)>
                            <ForwardRef(Typography)
                              color="text.secondary"
                              variant="body1"
                            >
                              desc
                            </ForwardRef(Typography)>
                          </ForwardRef(CardContent)>,
                        ],
                      }
                    }
                  >
                    <Noop />
                    <ForwardRef(ButtonBase)
                      className="MuiCardActionArea-root css-fc4fch-MuiCardActionArea-root"
                      focusVisibleClassName=""
                    >
                      <MuiButtonBaseRoot
                        as="button"
                        className="MuiButtonBase-root MuiCardActionArea-root css-fc4fch-MuiCardActionArea-root"
                        disabled={false}
                        onBlur={[Function]}
                        onContextMenu={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        ownerState={
                          Object {
                            "centerRipple": false,
                            "children": Array [
                              Array [
                                <div
                                  className="h-1/2 object-fit"
                                >
                                  <ForwardRef(CardMedia)
                                    alt="image"
                                    component="img"
                                    height="140"
                                    image="url"
                                  />
                                </div>,
                                <ForwardRef(CardContent)>
                                  <ForwardRef(Typography)
                                    component="div"
                                    gutterBottom={true}
                                    id="test1"
                                    variant="h5"
                                  >
                                    img
                                  </ForwardRef(Typography)>
                                  <ForwardRef(Typography)
                                    color="text.secondary"
                                    variant="body1"
                                  >
                                    desc
                                  </ForwardRef(Typography)>
                                </ForwardRef(CardContent)>,
                              ],
                              <MuiCardActionAreaFocusHighlight
                                className="MuiCardActionArea-focusHighlight"
                                ownerState={
                                  Object {
                                    "children": Array [
                                      <div
                                        className="h-1/2 object-fit"
                                      >
                                        <ForwardRef(CardMedia)
                                          alt="image"
                                          component="img"
                                          height="140"
                                          image="url"
                                        />
                                      </div>,
                                      <ForwardRef(CardContent)>
                                        <ForwardRef(Typography)
                                          component="div"
                                          gutterBottom={true}
                                          id="test1"
                                          variant="h5"
                                        >
                                          img
                                        </ForwardRef(Typography)>
                                        <ForwardRef(Typography)
                                          color="text.secondary"
                                          variant="body1"
                                        >
                                          desc
                                        </ForwardRef(Typography)>
                                      </ForwardRef(CardContent)>,
                                    ],
                                  }
                                }
                              />,
                            ],
                            "className": "MuiCardActionArea-root css-fc4fch-MuiCardActionArea-root",
                            "component": "button",
                            "disableRipple": false,
                            "disableTouchRipple": false,
                            "disabled": false,
                            "focusRipple": false,
                            "focusVisible": false,
                            "focusVisibleClassName": "",
                            "tabIndex": 0,
                          }
                        }
                        tabIndex={0}
                        type="button"
                      >
                        <Noop />
                        <button
                          className="MuiButtonBase-root MuiCardActionArea-root css-b6lsxj-MuiButtonBase-root-MuiCardActionArea-root"
                          disabled={false}
                          onBlur={[Function]}
                          onContextMenu={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <div
                            className="h-1/2 object-fit"
                          >
                            <ForwardRef(CardMedia)
                              alt="image"
                              component="img"
                              height="140"
                              image="url"
                            >
                              <MuiCardMediaRoot
                                alt="image"
                                as="img"
                                className="MuiCardMedia-root MuiCardMedia-media MuiCardMedia-img"
                                height="140"
                                ownerState={
                                  Object {
                                    "alt": "image",
                                    "component": "img",
                                    "height": "140",
                                    "image": "url",
                                    "isImageComponent": true,
                                    "isMediaComponent": true,
                                  }
                                }
                                src="url"
                              >
                                <Noop />
                                <img
                                  alt="image"
                                  className="MuiCardMedia-root MuiCardMedia-media MuiCardMedia-img css-o69gx8-MuiCardMedia-root"
                                  height="140"
                                  src="url"
                                />
                              </MuiCardMediaRoot>
                            </ForwardRef(CardMedia)>
                          </div>
                          <ForwardRef(CardContent)>
                            <MuiCardContentRoot
                              as="div"
                              className="MuiCardContent-root"
                              ownerState={
                                Object {
                                  "children": Array [
                                    <ForwardRef(Typography)
                                      component="div"
                                      gutterBottom={true}
                                      id="test1"
                                      variant="h5"
                                    >
                                      img
                                    </ForwardRef(Typography)>,
                                    <ForwardRef(Typography)
                                      color="text.secondary"
                                      variant="body1"
                                    >
                                      desc
                                    </ForwardRef(Typography)>,
                                  ],
                                  "component": "div",
                                }
                              }
                            >
                              <Noop />
                              <div
                                className="MuiCardContent-root css-46bh2p-MuiCardContent-root"
                              >
                                <ForwardRef(Typography)
                                  component="div"
                                  gutterBottom={true}
                                  id="test1"
                                  variant="h5"
                                >
                                  <MuiTypographyRoot
                                    as="div"
                                    className="MuiTypography-root MuiTypography-h5 MuiTypography-gutterBottom"
                                    id="test1"
                                    ownerState={
                                      Object {
                                        "align": "inherit",
                                        "children": "img",
                                        "className": undefined,
                                        "color": undefined,
                                        "component": "div",
                                        "gutterBottom": true,
                                        "id": "test1",
                                        "noWrap": false,
                                        "paragraph": false,
                                        "sx": Object {
                                          "color": undefined,
                                        },
                                        "variant": "h5",
                                        "variantMapping": Object {
                                          "body1": "p",
                                          "body2": "p",
                                          "h1": "h1",
                                          "h2": "h2",
                                          "h3": "h3",
                                          "h4": "h4",
                                          "h5": "h5",
                                          "h6": "h6",
                                          "inherit": "p",
                                          "subtitle1": "h6",
                                          "subtitle2": "h6",
                                        },
                                      }
                                    }
                                    sx={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiTypography-root MuiTypography-h5 MuiTypography-gutterBottom css-h93ljk-MuiTypography-root"
                                      id="test1"
                                    >
                                      img
                                    </div>
                                  </MuiTypographyRoot>
                                </ForwardRef(Typography)>
                                <ForwardRef(Typography)
                                  color="text.secondary"
                                  variant="body1"
                                >
                                  <MuiTypographyRoot
                                    as="p"
                                    className="MuiTypography-root MuiTypography-body1"
                                    ownerState={
                                      Object {
                                        "align": "inherit",
                                        "children": "desc",
                                        "className": undefined,
                                        "color": "text.secondary",
                                        "component": undefined,
                                        "gutterBottom": false,
                                        "noWrap": false,
                                        "paragraph": false,
                                        "sx": Object {
                                          "color": "text.secondary",
                                        },
                                        "variant": "body1",
                                        "variantMapping": Object {
                                          "body1": "p",
                                          "body2": "p",
                                          "h1": "h1",
                                          "h2": "h2",
                                          "h3": "h3",
                                          "h4": "h4",
                                          "h5": "h5",
                                          "h6": "h6",
                                          "inherit": "p",
                                          "subtitle1": "h6",
                                          "subtitle2": "h6",
                                        },
                                      }
                                    }
                                    sx={
                                      Object {
                                        "color": "text.secondary",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <p
                                      className="MuiTypography-root MuiTypography-body1 css-1pnmrwp-MuiTypography-root"
                                    >
                                      desc
                                    </p>
                                  </MuiTypographyRoot>
                                </ForwardRef(Typography)>
                              </div>
                            </MuiCardContentRoot>
                          </ForwardRef(CardContent)>
                          <MuiCardActionAreaFocusHighlight
                            className="MuiCardActionArea-focusHighlight"
                            ownerState={
                              Object {
                                "children": Array [
                                  <div
                                    className="h-1/2 object-fit"
                                  >
                                    <ForwardRef(CardMedia)
                                      alt="image"
                                      component="img"
                                      height="140"
                                      image="url"
                                    />
                                  </div>,
                                  <ForwardRef(CardContent)>
                                    <ForwardRef(Typography)
                                      component="div"
                                      gutterBottom={true}
                                      id="test1"
                                      variant="h5"
                                    >
                                      img
                                    </ForwardRef(Typography)>
                                    <ForwardRef(Typography)
                                      color="text.secondary"
                                      variant="body1"
                                    >
                                      desc
                                    </ForwardRef(Typography)>
                                  </ForwardRef(CardContent)>,
                                ],
                              }
                            }
                          >
                            <Noop />
                            <span
                              className="MuiCardActionArea-focusHighlight css-1v2exvi-MuiCardActionArea-focusHighlight"
                            />
                          </MuiCardActionAreaFocusHighlight>
                          <ForwardRef(TouchRipple)
                            center={false}
                          >
                            <MuiTouchRippleRoot
                              className="MuiTouchRipple-root"
                            >
                              <Noop />
                              <span
                                className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </MuiTouchRippleRoot>
                          </ForwardRef(TouchRipple)>
                        </button>
                      </MuiButtonBaseRoot>
                    </ForwardRef(ButtonBase)>
                  </MuiCardActionAreaRoot>
                </ForwardRef(CardActionArea)>
                <div
                  className="cursor-pointer"
                >
                  <ForwardRef(EditIcon)
                    onClick={[Function]}
                  >
                    <ForwardRef(SvgIcon)
                      data-testid="EditIcon"
                      onClick={[Function]}
                    >
                      <MuiSvgIconRoot
                        aria-hidden={true}
                        as="svg"
                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                        data-testid="EditIcon"
                        focusable="false"
                        onClick={[Function]}
                        ownerState={
                          Object {
                            "children": <path
                              d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                            />,
                            "color": "inherit",
                            "component": "svg",
                            "data-testid": "EditIcon",
                            "fontSize": "medium",
                            "inheritViewBox": false,
                            "onClick": [Function],
                            "viewBox": "0 0 24 24",
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <Noop />
                        <svg
                          aria-hidden={true}
                          className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                          data-testid="EditIcon"
                          focusable="false"
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </MuiSvgIconRoot>
                    </ForwardRef(SvgIcon)>
                  </ForwardRef(EditIcon)>
                  <ForwardRef(DeleteIcon)
                    onClick={[Function]}
                  >
                    <ForwardRef(SvgIcon)
                      data-testid="DeleteIcon"
                      onClick={[Function]}
                    >
                      <MuiSvgIconRoot
                        aria-hidden={true}
                        as="svg"
                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                        data-testid="DeleteIcon"
                        focusable="false"
                        onClick={[Function]}
                        ownerState={
                          Object {
                            "children": <path
                              d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                            />,
                            "color": "inherit",
                            "component": "svg",
                            "data-testid": "DeleteIcon",
                            "fontSize": "medium",
                            "inheritViewBox": false,
                            "onClick": [Function],
                            "viewBox": "0 0 24 24",
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <Noop />
                        <svg
                          aria-hidden={true}
                          className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                          data-testid="DeleteIcon"
                          focusable="false"
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                          />
                        </svg>
                      </MuiSvgIconRoot>
                    </ForwardRef(SvgIcon)>
                  </ForwardRef(DeleteIcon)>
                </div>
              </div>
            </MuiPaperRoot>
          </ForwardRef(Paper)>
        </MuiCardRoot>
      </ForwardRef(Card)>
    </div>
  </div>
</ActionAreaCard>
`;

exports[`should render form for creation of item should have button name create 1`] = `
<Form
  type="Create"
>
  <div
    className="flex items-center justify-center min-h-screen"
  >
    <div
      className="mx-auto w-9/12 p-4 border-4 shadow-md"
    >
      <h1
        className="text-gray-500 text-center font-semibold text-4xl"
      >
        Create
         Form
      </h1>
      <div
        className="my-8"
      >
         
        <ForwardRef(TextField)
          disabled={false}
          fullWidth={true}
          id="fullWidth"
          label="Name"
          onChange={[Function]}
          value=""
        >
          <MuiTextFieldRoot
            className="MuiTextField-root"
            color="primary"
            disabled={false}
            error={false}
            fullWidth={true}
            ownerState={
              Object {
                "autoFocus": false,
                "color": "primary",
                "disabled": false,
                "error": false,
                "fullWidth": true,
                "id": "fullWidth",
                "label": "Name",
                "multiline": false,
                "onChange": [Function],
                "required": false,
                "select": false,
                "value": "",
                "variant": "outlined",
              }
            }
            required={false}
            variant="outlined"
          >
            <Noop />
            <ForwardRef(FormControl)
              className="MuiTextField-root css-1xj1k15-MuiTextField-root"
              color="primary"
              disabled={false}
              error={false}
              fullWidth={true}
              required={false}
              variant="outlined"
            >
              <MuiFormControlRoot
                as="div"
                className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                ownerState={
                  Object {
                    "children": Array [
                      <ForwardRef(InputLabel)
                        htmlFor="fullWidth"
                        id="fullWidth-label"
                      >
                        Name
                      </ForwardRef(InputLabel)>,
                      <ForwardRef(OutlinedInput)
                        autoFocus={false}
                        fullWidth={true}
                        id="fullWidth"
                        label="Name"
                        multiline={false}
                        onChange={[Function]}
                        value=""
                      />,
                      undefined,
                    ],
                    "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                    "color": "primary",
                    "component": "div",
                    "disabled": false,
                    "error": false,
                    "fullWidth": true,
                    "hiddenLabel": false,
                    "margin": "none",
                    "required": false,
                    "size": "medium",
                    "variant": "outlined",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                >
                  <ForwardRef(InputLabel)
                    htmlFor="fullWidth"
                    id="fullWidth-label"
                  >
                    <MuiInputLabelRoot
                      classes={
                        Object {
                          "asterisk": "",
                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                        }
                      }
                      data-shrink={false}
                      htmlFor="fullWidth"
                      id="fullWidth-label"
                      ownerState={
                        Object {
                          "children": "Name",
                          "disableAnimation": false,
                          "formControl": Object {
                            "adornedStart": false,
                            "color": "primary",
                            "disabled": false,
                            "error": false,
                            "filled": false,
                            "focused": false,
                            "fullWidth": true,
                            "hiddenLabel": false,
                            "onBlur": [Function],
                            "onEmpty": [Function],
                            "onFilled": [Function],
                            "onFocus": [Function],
                            "registerEffect": [Function],
                            "required": false,
                            "setAdornedStart": [Function],
                            "size": "medium",
                            "variant": "outlined",
                          },
                          "htmlFor": "fullWidth",
                          "id": "fullWidth-label",
                          "required": false,
                          "shrink": false,
                          "size": "medium",
                          "variant": "outlined",
                        }
                      }
                    >
                      <Noop />
                      <ForwardRef(FormLabel)
                        className="css-1x92c1k-MuiInputLabel-root"
                        classes={
                          Object {
                            "asterisk": "",
                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                          }
                        }
                        data-shrink={false}
                        htmlFor="fullWidth"
                        id="fullWidth-label"
                      >
                        <MuiFormLabelRoot
                          as="label"
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1x92c1k-MuiInputLabel-root"
                          classes={
                            Object {
                              "asterisk": "",
                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                            }
                          }
                          data-shrink={false}
                          htmlFor="fullWidth"
                          id="fullWidth-label"
                          ownerState={
                            Object {
                              "children": "Name",
                              "className": "css-1x92c1k-MuiInputLabel-root",
                              "classes": Object {
                                "asterisk": "",
                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                              },
                              "color": "primary",
                              "component": "label",
                              "data-shrink": false,
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "htmlFor": "fullWidth",
                              "id": "fullWidth-label",
                              "required": false,
                            }
                          }
                        >
                          <Noop />
                          <label
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-14s5rfu-MuiFormLabel-root-MuiInputLabel-root"
                            data-shrink={false}
                            htmlFor="fullWidth"
                            id="fullWidth-label"
                          >
                            Name
                          </label>
                        </MuiFormLabelRoot>
                      </ForwardRef(FormLabel)>
                    </MuiInputLabelRoot>
                  </ForwardRef(InputLabel)>
                  <ForwardRef(OutlinedInput)
                    autoFocus={false}
                    fullWidth={true}
                    id="fullWidth"
                    label="Name"
                    multiline={false}
                    onChange={[Function]}
                    value=""
                  >
                    <ForwardRef(InputBase)
                      autoFocus={false}
                      classes={
                        Object {
                          "input": "MuiOutlinedInput-input",
                          "notchedOutline": null,
                          "root": "MuiOutlinedInput-root",
                        }
                      }
                      components={
                        Object {
                          "Input": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": [Function],
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              "label:MuiInputBase-input;",
                              [Function],
                              [Function],
                              [Function],
                              "label:MuiOutlinedInput-input;",
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "render": [Function],
                            "withComponent": [Function],
                          },
                          "Root": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "div",
                            "__emotion_forwardProp": [Function],
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              "label:MuiInputBase-root;",
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              "label:MuiOutlinedInput-root;",
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "render": [Function],
                            "withComponent": [Function],
                          },
                        }
                      }
                      fullWidth={true}
                      id="fullWidth"
                      inputComponent="input"
                      multiline={false}
                      onChange={[Function]}
                      renderSuffix={[Function]}
                      type="text"
                      value=""
                    >
                      <GlobalStyles
                        styles={
                          Object {
                            "@keyframes mui-auto-fill": Object {
                              "from": Object {
                                "display": "block",
                              },
                            },
                            "@keyframes mui-auto-fill-cancel": Object {
                              "from": Object {
                                "display": "block",
                              },
                            },
                          }
                        }
                      >
                        <GlobalStyles
                          defaultTheme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "not": [Function],
                                "only": [Function],
                                "unit": "px",
                                "up": [Function],
                                "values": Object {
                                  "lg": 1200,
                                  "md": 900,
                                  "sm": 600,
                                  "xl": 1536,
                                  "xs": 0,
                                },
                              },
                              "components": Object {},
                              "direction": "ltr",
                              "mixins": Object {
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "palette": Object {
                                "action": Object {
                                  "activatedOpacity": 0.12,
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                  "disabledOpacity": 0.38,
                                  "focus": "rgba(0, 0, 0, 0.12)",
                                  "focusOpacity": 0.12,
                                  "hover": "rgba(0, 0, 0, 0.04)",
                                  "hoverOpacity": 0.04,
                                  "selected": "rgba(0, 0, 0, 0.08)",
                                  "selectedOpacity": 0.08,
                                },
                                "augmentColor": [Function],
                                "background": Object {
                                  "default": "#fff",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "white": "#fff",
                                },
                                "contrastThreshold": 3,
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "error": Object {
                                  "contrastText": "#fff",
                                  "dark": "#c62828",
                                  "light": "#ef5350",
                                  "main": "#d32f2f",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#f5f5f5",
                                  "A200": "#eeeeee",
                                  "A400": "#bdbdbd",
                                  "A700": "#616161",
                                },
                                "info": Object {
                                  "contrastText": "#fff",
                                  "dark": "#01579b",
                                  "light": "#03a9f4",
                                  "main": "#0288d1",
                                },
                                "mode": "light",
                                "primary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#1565c0",
                                  "light": "#42a5f5",
                                  "main": "#1976d2",
                                },
                                "secondary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#7b1fa2",
                                  "light": "#ba68c8",
                                  "main": "#9c27b0",
                                },
                                "success": Object {
                                  "contrastText": "#fff",
                                  "dark": "#1b5e20",
                                  "light": "#4caf50",
                                  "main": "#2e7d32",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.6)",
                                },
                                "tonalOffset": 0.2,
                                "warning": Object {
                                  "contrastText": "#fff",
                                  "dark": "#e65100",
                                  "light": "#ff9800",
                                  "main": "#ed6c02",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "shape": Object {
                                "borderRadius": 4,
                              },
                              "spacing": [Function],
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.5,
                                },
                                "body2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.01071em",
                                  "lineHeight": 1.43,
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.02857em",
                                  "lineHeight": 1.75,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.03333em",
                                  "lineHeight": 1.66,
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightBold": 700,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "h1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "6rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.01562em",
                                  "lineHeight": 1.167,
                                },
                                "h2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.75rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.00833em",
                                  "lineHeight": 1.2,
                                },
                                "h3": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.167,
                                },
                                "h4": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00735em",
                                  "lineHeight": 1.235,
                                },
                                "h5": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.334,
                                },
                                "h6": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.25rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.0075em",
                                  "lineHeight": 1.6,
                                },
                                "htmlFontSize": 16,
                                "overline": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.08333em",
                                  "lineHeight": 2.66,
                                  "textTransform": "uppercase",
                                },
                                "pxToRem": [Function],
                                "subtitle1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.75,
                                },
                                "subtitle2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.00714em",
                                  "lineHeight": 1.57,
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "drawer": 1200,
                                "mobileStepper": 1000,
                                "modal": 1300,
                                "snackbar": 1400,
                                "speedDial": 1050,
                                "tooltip": 1500,
                              },
                            }
                          }
                          styles={
                            Object {
                              "@keyframes mui-auto-fill": Object {
                                "from": Object {
                                  "display": "block",
                                },
                              },
                              "@keyframes mui-auto-fill-cancel": Object {
                                "from": Object {
                                  "display": "block",
                                },
                              },
                            }
                          }
                        >
                          <EmotionGlobal
                            styles={
                              Object {
                                "@keyframes mui-auto-fill": Object {
                                  "from": Object {
                                    "display": "block",
                                  },
                                },
                                "@keyframes mui-auto-fill-cancel": Object {
                                  "from": Object {
                                    "display": "block",
                                  },
                                },
                              }
                            }
                          />
                        </GlobalStyles>
                      </GlobalStyles>
                      <MuiOutlinedInputRoot
                        className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                        classes={
                          Object {
                            "input": "MuiOutlinedInput-input",
                            "notchedOutline": null,
                            "root": "MuiOutlinedInput-root",
                          }
                        }
                        onClick={[Function]}
                        ownerState={
                          Object {
                            "aria-describedby": undefined,
                            "autoComplete": undefined,
                            "autoFocus": false,
                            "classes": Object {
                              "input": "MuiOutlinedInput-input",
                              "notchedOutline": null,
                              "root": "MuiOutlinedInput-root",
                            },
                            "color": "primary",
                            "components": Object {
                              "Input": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "__emotion_base": "input",
                                "__emotion_forwardProp": [Function],
                                "__emotion_real": [Circular],
                                "__emotion_styles": Array [
                                  "label:MuiInputBase-input;",
                                  [Function],
                                  [Function],
                                  [Function],
                                  "label:MuiOutlinedInput-input;",
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "defaultProps": undefined,
                                "render": [Function],
                                "withComponent": [Function],
                              },
                              "Root": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "__emotion_base": "div",
                                "__emotion_forwardProp": [Function],
                                "__emotion_real": [Circular],
                                "__emotion_styles": Array [
                                  "label:MuiInputBase-root;",
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  "label:MuiOutlinedInput-root;",
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "defaultProps": undefined,
                                "render": [Function],
                                "withComponent": [Function],
                              },
                            },
                            "defaultValue": undefined,
                            "disabled": false,
                            "endAdornment": undefined,
                            "error": false,
                            "focused": false,
                            "formControl": Object {
                              "adornedStart": false,
                              "color": "primary",
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "fullWidth": true,
                              "hiddenLabel": false,
                              "onBlur": [Function],
                              "onEmpty": [Function],
                              "onFilled": [Function],
                              "onFocus": [Function],
                              "registerEffect": [Function],
                              "required": false,
                              "setAdornedStart": [Function],
                              "size": "medium",
                              "variant": "outlined",
                            },
                            "fullWidth": true,
                            "hiddenLabel": false,
                            "id": "fullWidth",
                            "inputComponent": "input",
                            "inputProps": undefined,
                            "inputRef": undefined,
                            "maxRows": undefined,
                            "minRows": undefined,
                            "multiline": false,
                            "name": undefined,
                            "onBlur": undefined,
                            "onChange": [Function],
                            "onFocus": undefined,
                            "placeholder": undefined,
                            "renderSuffix": [Function],
                            "rows": undefined,
                            "size": "medium",
                            "startAdornment": undefined,
                            "type": "text",
                            "value": "",
                          }
                        }
                      >
                        <Noop />
                        <div
                          className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-md26zr-MuiInputBase-root-MuiOutlinedInput-root"
                          onClick={[Function]}
                        >
                          <MuiOutlinedInputInput
                            aria-invalid={false}
                            as="input"
                            autoFocus={false}
                            className="MuiOutlinedInput-input MuiInputBase-input"
                            disabled={false}
                            id="fullWidth"
                            onAnimationStart={[Function]}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            ownerState={
                              Object {
                                "aria-describedby": undefined,
                                "autoComplete": undefined,
                                "autoFocus": false,
                                "classes": Object {
                                  "input": "MuiOutlinedInput-input",
                                  "notchedOutline": null,
                                  "root": "MuiOutlinedInput-root",
                                },
                                "color": "primary",
                                "components": Object {
                                  "Input": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "__emotion_base": "input",
                                    "__emotion_forwardProp": [Function],
                                    "__emotion_real": [Circular],
                                    "__emotion_styles": Array [
                                      "label:MuiInputBase-input;",
                                      [Function],
                                      [Function],
                                      [Function],
                                      "label:MuiOutlinedInput-input;",
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "defaultProps": undefined,
                                    "render": [Function],
                                    "withComponent": [Function],
                                  },
                                  "Root": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "__emotion_base": "div",
                                    "__emotion_forwardProp": [Function],
                                    "__emotion_real": [Circular],
                                    "__emotion_styles": Array [
                                      "label:MuiInputBase-root;",
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      "label:MuiOutlinedInput-root;",
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "defaultProps": undefined,
                                    "render": [Function],
                                    "withComponent": [Function],
                                  },
                                },
                                "defaultValue": undefined,
                                "disabled": false,
                                "endAdornment": undefined,
                                "error": false,
                                "focused": false,
                                "formControl": Object {
                                  "adornedStart": false,
                                  "color": "primary",
                                  "disabled": false,
                                  "error": false,
                                  "filled": false,
                                  "focused": false,
                                  "fullWidth": true,
                                  "hiddenLabel": false,
                                  "onBlur": [Function],
                                  "onEmpty": [Function],
                                  "onFilled": [Function],
                                  "onFocus": [Function],
                                  "registerEffect": [Function],
                                  "required": false,
                                  "setAdornedStart": [Function],
                                  "size": "medium",
                                  "variant": "outlined",
                                },
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "id": "fullWidth",
                                "inputComponent": "input",
                                "inputProps": undefined,
                                "inputRef": undefined,
                                "maxRows": undefined,
                                "minRows": undefined,
                                "multiline": false,
                                "name": undefined,
                                "onBlur": undefined,
                                "onChange": [Function],
                                "onFocus": undefined,
                                "placeholder": undefined,
                                "renderSuffix": [Function],
                                "rows": undefined,
                                "size": "medium",
                                "startAdornment": undefined,
                                "type": "text",
                                "value": "",
                              }
                            }
                            required={false}
                            type="text"
                            value=""
                          >
                            <Noop />
                            <input
                              aria-invalid={false}
                              autoFocus={false}
                              className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                              disabled={false}
                              id="fullWidth"
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              required={false}
                              type="text"
                              value=""
                            />
                          </MuiOutlinedInputInput>
                          <MuiOutlinedInputNotchedOutline
                            className="MuiOutlinedInput-notchedOutline"
                            label="Name"
                            notched={false}
                          >
                            <Noop />
                            <NotchedOutline
                              className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                              label="Name"
                              notched={false}
                            >
                              <Styled(fieldset)
                                aria-hidden={true}
                                className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                ownerState={
                                  Object {
                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                    "label": "Name",
                                    "notched": false,
                                    "withLabel": true,
                                  }
                                }
                              >
                                <Noop />
                                <fieldset
                                  aria-hidden={true}
                                  className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                >
                                  <Styled(legend)
                                    ownerState={
                                      Object {
                                        "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                        "label": "Name",
                                        "notched": false,
                                        "withLabel": true,
                                      }
                                    }
                                  >
                                    <Noop />
                                    <legend
                                      className="css-173wfxe"
                                    >
                                      <span>
                                        Name
                                      </span>
                                    </legend>
                                  </Styled(legend)>
                                </fieldset>
                              </Styled(fieldset)>
                            </NotchedOutline>
                          </MuiOutlinedInputNotchedOutline>
                        </div>
                      </MuiOutlinedInputRoot>
                    </ForwardRef(InputBase)>
                  </ForwardRef(OutlinedInput)>
                </div>
              </MuiFormControlRoot>
            </ForwardRef(FormControl)>
          </MuiTextFieldRoot>
        </ForwardRef(TextField)>
         
      </div>
      <div
        className="my-8"
      >
         
        <ForwardRef(TextField)
          fullWidth={true}
          id="fullWidth"
          label="Detail"
          onChange={[Function]}
          value=""
        >
          <MuiTextFieldRoot
            className="MuiTextField-root"
            color="primary"
            disabled={false}
            error={false}
            fullWidth={true}
            ownerState={
              Object {
                "autoFocus": false,
                "color": "primary",
                "disabled": false,
                "error": false,
                "fullWidth": true,
                "id": "fullWidth",
                "label": "Detail",
                "multiline": false,
                "onChange": [Function],
                "required": false,
                "select": false,
                "value": "",
                "variant": "outlined",
              }
            }
            required={false}
            variant="outlined"
          >
            <Noop />
            <ForwardRef(FormControl)
              className="MuiTextField-root css-1xj1k15-MuiTextField-root"
              color="primary"
              disabled={false}
              error={false}
              fullWidth={true}
              required={false}
              variant="outlined"
            >
              <MuiFormControlRoot
                as="div"
                className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                ownerState={
                  Object {
                    "children": Array [
                      <ForwardRef(InputLabel)
                        htmlFor="fullWidth"
                        id="fullWidth-label"
                      >
                        Detail
                      </ForwardRef(InputLabel)>,
                      <ForwardRef(OutlinedInput)
                        autoFocus={false}
                        fullWidth={true}
                        id="fullWidth"
                        label="Detail"
                        multiline={false}
                        onChange={[Function]}
                        value=""
                      />,
                      undefined,
                    ],
                    "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                    "color": "primary",
                    "component": "div",
                    "disabled": false,
                    "error": false,
                    "fullWidth": true,
                    "hiddenLabel": false,
                    "margin": "none",
                    "required": false,
                    "size": "medium",
                    "variant": "outlined",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                >
                  <ForwardRef(InputLabel)
                    htmlFor="fullWidth"
                    id="fullWidth-label"
                  >
                    <MuiInputLabelRoot
                      classes={
                        Object {
                          "asterisk": "",
                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                        }
                      }
                      data-shrink={false}
                      htmlFor="fullWidth"
                      id="fullWidth-label"
                      ownerState={
                        Object {
                          "children": "Detail",
                          "disableAnimation": false,
                          "formControl": Object {
                            "adornedStart": false,
                            "color": "primary",
                            "disabled": false,
                            "error": false,
                            "filled": false,
                            "focused": false,
                            "fullWidth": true,
                            "hiddenLabel": false,
                            "onBlur": [Function],
                            "onEmpty": [Function],
                            "onFilled": [Function],
                            "onFocus": [Function],
                            "registerEffect": [Function],
                            "required": false,
                            "setAdornedStart": [Function],
                            "size": "medium",
                            "variant": "outlined",
                          },
                          "htmlFor": "fullWidth",
                          "id": "fullWidth-label",
                          "required": false,
                          "shrink": false,
                          "size": "medium",
                          "variant": "outlined",
                        }
                      }
                    >
                      <Noop />
                      <ForwardRef(FormLabel)
                        className="css-1x92c1k-MuiInputLabel-root"
                        classes={
                          Object {
                            "asterisk": "",
                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                          }
                        }
                        data-shrink={false}
                        htmlFor="fullWidth"
                        id="fullWidth-label"
                      >
                        <MuiFormLabelRoot
                          as="label"
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1x92c1k-MuiInputLabel-root"
                          classes={
                            Object {
                              "asterisk": "",
                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                            }
                          }
                          data-shrink={false}
                          htmlFor="fullWidth"
                          id="fullWidth-label"
                          ownerState={
                            Object {
                              "children": "Detail",
                              "className": "css-1x92c1k-MuiInputLabel-root",
                              "classes": Object {
                                "asterisk": "",
                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                              },
                              "color": "primary",
                              "component": "label",
                              "data-shrink": false,
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "htmlFor": "fullWidth",
                              "id": "fullWidth-label",
                              "required": false,
                            }
                          }
                        >
                          <Noop />
                          <label
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-14s5rfu-MuiFormLabel-root-MuiInputLabel-root"
                            data-shrink={false}
                            htmlFor="fullWidth"
                            id="fullWidth-label"
                          >
                            Detail
                          </label>
                        </MuiFormLabelRoot>
                      </ForwardRef(FormLabel)>
                    </MuiInputLabelRoot>
                  </ForwardRef(InputLabel)>
                  <ForwardRef(OutlinedInput)
                    autoFocus={false}
                    fullWidth={true}
                    id="fullWidth"
                    label="Detail"
                    multiline={false}
                    onChange={[Function]}
                    value=""
                  >
                    <ForwardRef(InputBase)
                      autoFocus={false}
                      classes={
                        Object {
                          "input": "MuiOutlinedInput-input",
                          "notchedOutline": null,
                          "root": "MuiOutlinedInput-root",
                        }
                      }
                      components={
                        Object {
                          "Input": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": [Function],
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              "label:MuiInputBase-input;",
                              [Function],
                              [Function],
                              [Function],
                              "label:MuiOutlinedInput-input;",
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "render": [Function],
                            "withComponent": [Function],
                          },
                          "Root": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "div",
                            "__emotion_forwardProp": [Function],
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              "label:MuiInputBase-root;",
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              "label:MuiOutlinedInput-root;",
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "render": [Function],
                            "withComponent": [Function],
                          },
                        }
                      }
                      fullWidth={true}
                      id="fullWidth"
                      inputComponent="input"
                      multiline={false}
                      onChange={[Function]}
                      renderSuffix={[Function]}
                      type="text"
                      value=""
                    >
                      <GlobalStyles
                        styles={
                          Object {
                            "@keyframes mui-auto-fill": Object {
                              "from": Object {
                                "display": "block",
                              },
                            },
                            "@keyframes mui-auto-fill-cancel": Object {
                              "from": Object {
                                "display": "block",
                              },
                            },
                          }
                        }
                      >
                        <GlobalStyles
                          defaultTheme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "not": [Function],
                                "only": [Function],
                                "unit": "px",
                                "up": [Function],
                                "values": Object {
                                  "lg": 1200,
                                  "md": 900,
                                  "sm": 600,
                                  "xl": 1536,
                                  "xs": 0,
                                },
                              },
                              "components": Object {},
                              "direction": "ltr",
                              "mixins": Object {
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "palette": Object {
                                "action": Object {
                                  "activatedOpacity": 0.12,
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                  "disabledOpacity": 0.38,
                                  "focus": "rgba(0, 0, 0, 0.12)",
                                  "focusOpacity": 0.12,
                                  "hover": "rgba(0, 0, 0, 0.04)",
                                  "hoverOpacity": 0.04,
                                  "selected": "rgba(0, 0, 0, 0.08)",
                                  "selectedOpacity": 0.08,
                                },
                                "augmentColor": [Function],
                                "background": Object {
                                  "default": "#fff",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "white": "#fff",
                                },
                                "contrastThreshold": 3,
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "error": Object {
                                  "contrastText": "#fff",
                                  "dark": "#c62828",
                                  "light": "#ef5350",
                                  "main": "#d32f2f",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#f5f5f5",
                                  "A200": "#eeeeee",
                                  "A400": "#bdbdbd",
                                  "A700": "#616161",
                                },
                                "info": Object {
                                  "contrastText": "#fff",
                                  "dark": "#01579b",
                                  "light": "#03a9f4",
                                  "main": "#0288d1",
                                },
                                "mode": "light",
                                "primary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#1565c0",
                                  "light": "#42a5f5",
                                  "main": "#1976d2",
                                },
                                "secondary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#7b1fa2",
                                  "light": "#ba68c8",
                                  "main": "#9c27b0",
                                },
                                "success": Object {
                                  "contrastText": "#fff",
                                  "dark": "#1b5e20",
                                  "light": "#4caf50",
                                  "main": "#2e7d32",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.6)",
                                },
                                "tonalOffset": 0.2,
                                "warning": Object {
                                  "contrastText": "#fff",
                                  "dark": "#e65100",
                                  "light": "#ff9800",
                                  "main": "#ed6c02",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "shape": Object {
                                "borderRadius": 4,
                              },
                              "spacing": [Function],
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.5,
                                },
                                "body2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.01071em",
                                  "lineHeight": 1.43,
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.02857em",
                                  "lineHeight": 1.75,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.03333em",
                                  "lineHeight": 1.66,
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightBold": 700,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "h1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "6rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.01562em",
                                  "lineHeight": 1.167,
                                },
                                "h2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.75rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.00833em",
                                  "lineHeight": 1.2,
                                },
                                "h3": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.167,
                                },
                                "h4": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00735em",
                                  "lineHeight": 1.235,
                                },
                                "h5": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.334,
                                },
                                "h6": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.25rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.0075em",
                                  "lineHeight": 1.6,
                                },
                                "htmlFontSize": 16,
                                "overline": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.08333em",
                                  "lineHeight": 2.66,
                                  "textTransform": "uppercase",
                                },
                                "pxToRem": [Function],
                                "subtitle1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.75,
                                },
                                "subtitle2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.00714em",
                                  "lineHeight": 1.57,
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "drawer": 1200,
                                "mobileStepper": 1000,
                                "modal": 1300,
                                "snackbar": 1400,
                                "speedDial": 1050,
                                "tooltip": 1500,
                              },
                            }
                          }
                          styles={
                            Object {
                              "@keyframes mui-auto-fill": Object {
                                "from": Object {
                                  "display": "block",
                                },
                              },
                              "@keyframes mui-auto-fill-cancel": Object {
                                "from": Object {
                                  "display": "block",
                                },
                              },
                            }
                          }
                        >
                          <EmotionGlobal
                            styles={
                              Object {
                                "@keyframes mui-auto-fill": Object {
                                  "from": Object {
                                    "display": "block",
                                  },
                                },
                                "@keyframes mui-auto-fill-cancel": Object {
                                  "from": Object {
                                    "display": "block",
                                  },
                                },
                              }
                            }
                          />
                        </GlobalStyles>
                      </GlobalStyles>
                      <MuiOutlinedInputRoot
                        className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                        classes={
                          Object {
                            "input": "MuiOutlinedInput-input",
                            "notchedOutline": null,
                            "root": "MuiOutlinedInput-root",
                          }
                        }
                        onClick={[Function]}
                        ownerState={
                          Object {
                            "aria-describedby": undefined,
                            "autoComplete": undefined,
                            "autoFocus": false,
                            "classes": Object {
                              "input": "MuiOutlinedInput-input",
                              "notchedOutline": null,
                              "root": "MuiOutlinedInput-root",
                            },
                            "color": "primary",
                            "components": Object {
                              "Input": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "__emotion_base": "input",
                                "__emotion_forwardProp": [Function],
                                "__emotion_real": [Circular],
                                "__emotion_styles": Array [
                                  "label:MuiInputBase-input;",
                                  [Function],
                                  [Function],
                                  [Function],
                                  "label:MuiOutlinedInput-input;",
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "defaultProps": undefined,
                                "render": [Function],
                                "withComponent": [Function],
                              },
                              "Root": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "__emotion_base": "div",
                                "__emotion_forwardProp": [Function],
                                "__emotion_real": [Circular],
                                "__emotion_styles": Array [
                                  "label:MuiInputBase-root;",
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  "label:MuiOutlinedInput-root;",
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "defaultProps": undefined,
                                "render": [Function],
                                "withComponent": [Function],
                              },
                            },
                            "defaultValue": undefined,
                            "disabled": false,
                            "endAdornment": undefined,
                            "error": false,
                            "focused": false,
                            "formControl": Object {
                              "adornedStart": false,
                              "color": "primary",
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "fullWidth": true,
                              "hiddenLabel": false,
                              "onBlur": [Function],
                              "onEmpty": [Function],
                              "onFilled": [Function],
                              "onFocus": [Function],
                              "registerEffect": [Function],
                              "required": false,
                              "setAdornedStart": [Function],
                              "size": "medium",
                              "variant": "outlined",
                            },
                            "fullWidth": true,
                            "hiddenLabel": false,
                            "id": "fullWidth",
                            "inputComponent": "input",
                            "inputProps": undefined,
                            "inputRef": undefined,
                            "maxRows": undefined,
                            "minRows": undefined,
                            "multiline": false,
                            "name": undefined,
                            "onBlur": undefined,
                            "onChange": [Function],
                            "onFocus": undefined,
                            "placeholder": undefined,
                            "renderSuffix": [Function],
                            "rows": undefined,
                            "size": "medium",
                            "startAdornment": undefined,
                            "type": "text",
                            "value": "",
                          }
                        }
                      >
                        <Noop />
                        <div
                          className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-md26zr-MuiInputBase-root-MuiOutlinedInput-root"
                          onClick={[Function]}
                        >
                          <MuiOutlinedInputInput
                            aria-invalid={false}
                            as="input"
                            autoFocus={false}
                            className="MuiOutlinedInput-input MuiInputBase-input"
                            disabled={false}
                            id="fullWidth"
                            onAnimationStart={[Function]}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            ownerState={
                              Object {
                                "aria-describedby": undefined,
                                "autoComplete": undefined,
                                "autoFocus": false,
                                "classes": Object {
                                  "input": "MuiOutlinedInput-input",
                                  "notchedOutline": null,
                                  "root": "MuiOutlinedInput-root",
                                },
                                "color": "primary",
                                "components": Object {
                                  "Input": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "__emotion_base": "input",
                                    "__emotion_forwardProp": [Function],
                                    "__emotion_real": [Circular],
                                    "__emotion_styles": Array [
                                      "label:MuiInputBase-input;",
                                      [Function],
                                      [Function],
                                      [Function],
                                      "label:MuiOutlinedInput-input;",
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "defaultProps": undefined,
                                    "render": [Function],
                                    "withComponent": [Function],
                                  },
                                  "Root": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "__emotion_base": "div",
                                    "__emotion_forwardProp": [Function],
                                    "__emotion_real": [Circular],
                                    "__emotion_styles": Array [
                                      "label:MuiInputBase-root;",
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      "label:MuiOutlinedInput-root;",
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "defaultProps": undefined,
                                    "render": [Function],
                                    "withComponent": [Function],
                                  },
                                },
                                "defaultValue": undefined,
                                "disabled": false,
                                "endAdornment": undefined,
                                "error": false,
                                "focused": false,
                                "formControl": Object {
                                  "adornedStart": false,
                                  "color": "primary",
                                  "disabled": false,
                                  "error": false,
                                  "filled": false,
                                  "focused": false,
                                  "fullWidth": true,
                                  "hiddenLabel": false,
                                  "onBlur": [Function],
                                  "onEmpty": [Function],
                                  "onFilled": [Function],
                                  "onFocus": [Function],
                                  "registerEffect": [Function],
                                  "required": false,
                                  "setAdornedStart": [Function],
                                  "size": "medium",
                                  "variant": "outlined",
                                },
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "id": "fullWidth",
                                "inputComponent": "input",
                                "inputProps": undefined,
                                "inputRef": undefined,
                                "maxRows": undefined,
                                "minRows": undefined,
                                "multiline": false,
                                "name": undefined,
                                "onBlur": undefined,
                                "onChange": [Function],
                                "onFocus": undefined,
                                "placeholder": undefined,
                                "renderSuffix": [Function],
                                "rows": undefined,
                                "size": "medium",
                                "startAdornment": undefined,
                                "type": "text",
                                "value": "",
                              }
                            }
                            required={false}
                            type="text"
                            value=""
                          >
                            <Noop />
                            <input
                              aria-invalid={false}
                              autoFocus={false}
                              className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                              disabled={false}
                              id="fullWidth"
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              required={false}
                              type="text"
                              value=""
                            />
                          </MuiOutlinedInputInput>
                          <MuiOutlinedInputNotchedOutline
                            className="MuiOutlinedInput-notchedOutline"
                            label="Detail"
                            notched={false}
                          >
                            <Noop />
                            <NotchedOutline
                              className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                              label="Detail"
                              notched={false}
                            >
                              <Styled(fieldset)
                                aria-hidden={true}
                                className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                ownerState={
                                  Object {
                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                    "label": "Detail",
                                    "notched": false,
                                    "withLabel": true,
                                  }
                                }
                              >
                                <Noop />
                                <fieldset
                                  aria-hidden={true}
                                  className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                >
                                  <Styled(legend)
                                    ownerState={
                                      Object {
                                        "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                        "label": "Detail",
                                        "notched": false,
                                        "withLabel": true,
                                      }
                                    }
                                  >
                                    <Noop />
                                    <legend
                                      className="css-173wfxe"
                                    >
                                      <span>
                                        Detail
                                      </span>
                                    </legend>
                                  </Styled(legend)>
                                </fieldset>
                              </Styled(fieldset)>
                            </NotchedOutline>
                          </MuiOutlinedInputNotchedOutline>
                        </div>
                      </MuiOutlinedInputRoot>
                    </ForwardRef(InputBase)>
                  </ForwardRef(OutlinedInput)>
                </div>
              </MuiFormControlRoot>
            </ForwardRef(FormControl)>
          </MuiTextFieldRoot>
        </ForwardRef(TextField)>
         
      </div>
      <div
        className="my-8"
      >
         
        <ForwardRef(TextField)
          fullWidth={true}
          id="fullWidth"
          label="Url"
          onChange={[Function]}
          value=""
        >
          <MuiTextFieldRoot
            className="MuiTextField-root"
            color="primary"
            disabled={false}
            error={false}
            fullWidth={true}
            ownerState={
              Object {
                "autoFocus": false,
                "color": "primary",
                "disabled": false,
                "error": false,
                "fullWidth": true,
                "id": "fullWidth",
                "label": "Url",
                "multiline": false,
                "onChange": [Function],
                "required": false,
                "select": false,
                "value": "",
                "variant": "outlined",
              }
            }
            required={false}
            variant="outlined"
          >
            <Noop />
            <ForwardRef(FormControl)
              className="MuiTextField-root css-1xj1k15-MuiTextField-root"
              color="primary"
              disabled={false}
              error={false}
              fullWidth={true}
              required={false}
              variant="outlined"
            >
              <MuiFormControlRoot
                as="div"
                className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                ownerState={
                  Object {
                    "children": Array [
                      <ForwardRef(InputLabel)
                        htmlFor="fullWidth"
                        id="fullWidth-label"
                      >
                        Url
                      </ForwardRef(InputLabel)>,
                      <ForwardRef(OutlinedInput)
                        autoFocus={false}
                        fullWidth={true}
                        id="fullWidth"
                        label="Url"
                        multiline={false}
                        onChange={[Function]}
                        value=""
                      />,
                      undefined,
                    ],
                    "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                    "color": "primary",
                    "component": "div",
                    "disabled": false,
                    "error": false,
                    "fullWidth": true,
                    "hiddenLabel": false,
                    "margin": "none",
                    "required": false,
                    "size": "medium",
                    "variant": "outlined",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                >
                  <ForwardRef(InputLabel)
                    htmlFor="fullWidth"
                    id="fullWidth-label"
                  >
                    <MuiInputLabelRoot
                      classes={
                        Object {
                          "asterisk": "",
                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                        }
                      }
                      data-shrink={false}
                      htmlFor="fullWidth"
                      id="fullWidth-label"
                      ownerState={
                        Object {
                          "children": "Url",
                          "disableAnimation": false,
                          "formControl": Object {
                            "adornedStart": false,
                            "color": "primary",
                            "disabled": false,
                            "error": false,
                            "filled": false,
                            "focused": false,
                            "fullWidth": true,
                            "hiddenLabel": false,
                            "onBlur": [Function],
                            "onEmpty": [Function],
                            "onFilled": [Function],
                            "onFocus": [Function],
                            "registerEffect": [Function],
                            "required": false,
                            "setAdornedStart": [Function],
                            "size": "medium",
                            "variant": "outlined",
                          },
                          "htmlFor": "fullWidth",
                          "id": "fullWidth-label",
                          "required": false,
                          "shrink": false,
                          "size": "medium",
                          "variant": "outlined",
                        }
                      }
                    >
                      <Noop />
                      <ForwardRef(FormLabel)
                        className="css-1x92c1k-MuiInputLabel-root"
                        classes={
                          Object {
                            "asterisk": "",
                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                          }
                        }
                        data-shrink={false}
                        htmlFor="fullWidth"
                        id="fullWidth-label"
                      >
                        <MuiFormLabelRoot
                          as="label"
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1x92c1k-MuiInputLabel-root"
                          classes={
                            Object {
                              "asterisk": "",
                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                            }
                          }
                          data-shrink={false}
                          htmlFor="fullWidth"
                          id="fullWidth-label"
                          ownerState={
                            Object {
                              "children": "Url",
                              "className": "css-1x92c1k-MuiInputLabel-root",
                              "classes": Object {
                                "asterisk": "",
                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                              },
                              "color": "primary",
                              "component": "label",
                              "data-shrink": false,
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "htmlFor": "fullWidth",
                              "id": "fullWidth-label",
                              "required": false,
                            }
                          }
                        >
                          <Noop />
                          <label
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-14s5rfu-MuiFormLabel-root-MuiInputLabel-root"
                            data-shrink={false}
                            htmlFor="fullWidth"
                            id="fullWidth-label"
                          >
                            Url
                          </label>
                        </MuiFormLabelRoot>
                      </ForwardRef(FormLabel)>
                    </MuiInputLabelRoot>
                  </ForwardRef(InputLabel)>
                  <ForwardRef(OutlinedInput)
                    autoFocus={false}
                    fullWidth={true}
                    id="fullWidth"
                    label="Url"
                    multiline={false}
                    onChange={[Function]}
                    value=""
                  >
                    <ForwardRef(InputBase)
                      autoFocus={false}
                      classes={
                        Object {
                          "input": "MuiOutlinedInput-input",
                          "notchedOutline": null,
                          "root": "MuiOutlinedInput-root",
                        }
                      }
                      components={
                        Object {
                          "Input": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": [Function],
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              "label:MuiInputBase-input;",
                              [Function],
                              [Function],
                              [Function],
                              "label:MuiOutlinedInput-input;",
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "render": [Function],
                            "withComponent": [Function],
                          },
                          "Root": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "div",
                            "__emotion_forwardProp": [Function],
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              "label:MuiInputBase-root;",
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              "label:MuiOutlinedInput-root;",
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "render": [Function],
                            "withComponent": [Function],
                          },
                        }
                      }
                      fullWidth={true}
                      id="fullWidth"
                      inputComponent="input"
                      multiline={false}
                      onChange={[Function]}
                      renderSuffix={[Function]}
                      type="text"
                      value=""
                    >
                      <GlobalStyles
                        styles={
                          Object {
                            "@keyframes mui-auto-fill": Object {
                              "from": Object {
                                "display": "block",
                              },
                            },
                            "@keyframes mui-auto-fill-cancel": Object {
                              "from": Object {
                                "display": "block",
                              },
                            },
                          }
                        }
                      >
                        <GlobalStyles
                          defaultTheme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "not": [Function],
                                "only": [Function],
                                "unit": "px",
                                "up": [Function],
                                "values": Object {
                                  "lg": 1200,
                                  "md": 900,
                                  "sm": 600,
                                  "xl": 1536,
                                  "xs": 0,
                                },
                              },
                              "components": Object {},
                              "direction": "ltr",
                              "mixins": Object {
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "palette": Object {
                                "action": Object {
                                  "activatedOpacity": 0.12,
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                  "disabledOpacity": 0.38,
                                  "focus": "rgba(0, 0, 0, 0.12)",
                                  "focusOpacity": 0.12,
                                  "hover": "rgba(0, 0, 0, 0.04)",
                                  "hoverOpacity": 0.04,
                                  "selected": "rgba(0, 0, 0, 0.08)",
                                  "selectedOpacity": 0.08,
                                },
                                "augmentColor": [Function],
                                "background": Object {
                                  "default": "#fff",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "white": "#fff",
                                },
                                "contrastThreshold": 3,
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "error": Object {
                                  "contrastText": "#fff",
                                  "dark": "#c62828",
                                  "light": "#ef5350",
                                  "main": "#d32f2f",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#f5f5f5",
                                  "A200": "#eeeeee",
                                  "A400": "#bdbdbd",
                                  "A700": "#616161",
                                },
                                "info": Object {
                                  "contrastText": "#fff",
                                  "dark": "#01579b",
                                  "light": "#03a9f4",
                                  "main": "#0288d1",
                                },
                                "mode": "light",
                                "primary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#1565c0",
                                  "light": "#42a5f5",
                                  "main": "#1976d2",
                                },
                                "secondary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#7b1fa2",
                                  "light": "#ba68c8",
                                  "main": "#9c27b0",
                                },
                                "success": Object {
                                  "contrastText": "#fff",
                                  "dark": "#1b5e20",
                                  "light": "#4caf50",
                                  "main": "#2e7d32",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.6)",
                                },
                                "tonalOffset": 0.2,
                                "warning": Object {
                                  "contrastText": "#fff",
                                  "dark": "#e65100",
                                  "light": "#ff9800",
                                  "main": "#ed6c02",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "shape": Object {
                                "borderRadius": 4,
                              },
                              "spacing": [Function],
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.5,
                                },
                                "body2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.01071em",
                                  "lineHeight": 1.43,
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.02857em",
                                  "lineHeight": 1.75,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.03333em",
                                  "lineHeight": 1.66,
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightBold": 700,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "h1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "6rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.01562em",
                                  "lineHeight": 1.167,
                                },
                                "h2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.75rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.00833em",
                                  "lineHeight": 1.2,
                                },
                                "h3": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.167,
                                },
                                "h4": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00735em",
                                  "lineHeight": 1.235,
                                },
                                "h5": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.334,
                                },
                                "h6": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.25rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.0075em",
                                  "lineHeight": 1.6,
                                },
                                "htmlFontSize": 16,
                                "overline": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.08333em",
                                  "lineHeight": 2.66,
                                  "textTransform": "uppercase",
                                },
                                "pxToRem": [Function],
                                "subtitle1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.75,
                                },
                                "subtitle2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.00714em",
                                  "lineHeight": 1.57,
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "drawer": 1200,
                                "mobileStepper": 1000,
                                "modal": 1300,
                                "snackbar": 1400,
                                "speedDial": 1050,
                                "tooltip": 1500,
                              },
                            }
                          }
                          styles={
                            Object {
                              "@keyframes mui-auto-fill": Object {
                                "from": Object {
                                  "display": "block",
                                },
                              },
                              "@keyframes mui-auto-fill-cancel": Object {
                                "from": Object {
                                  "display": "block",
                                },
                              },
                            }
                          }
                        >
                          <EmotionGlobal
                            styles={
                              Object {
                                "@keyframes mui-auto-fill": Object {
                                  "from": Object {
                                    "display": "block",
                                  },
                                },
                                "@keyframes mui-auto-fill-cancel": Object {
                                  "from": Object {
                                    "display": "block",
                                  },
                                },
                              }
                            }
                          />
                        </GlobalStyles>
                      </GlobalStyles>
                      <MuiOutlinedInputRoot
                        className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                        classes={
                          Object {
                            "input": "MuiOutlinedInput-input",
                            "notchedOutline": null,
                            "root": "MuiOutlinedInput-root",
                          }
                        }
                        onClick={[Function]}
                        ownerState={
                          Object {
                            "aria-describedby": undefined,
                            "autoComplete": undefined,
                            "autoFocus": false,
                            "classes": Object {
                              "input": "MuiOutlinedInput-input",
                              "notchedOutline": null,
                              "root": "MuiOutlinedInput-root",
                            },
                            "color": "primary",
                            "components": Object {
                              "Input": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "__emotion_base": "input",
                                "__emotion_forwardProp": [Function],
                                "__emotion_real": [Circular],
                                "__emotion_styles": Array [
                                  "label:MuiInputBase-input;",
                                  [Function],
                                  [Function],
                                  [Function],
                                  "label:MuiOutlinedInput-input;",
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "defaultProps": undefined,
                                "render": [Function],
                                "withComponent": [Function],
                              },
                              "Root": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "__emotion_base": "div",
                                "__emotion_forwardProp": [Function],
                                "__emotion_real": [Circular],
                                "__emotion_styles": Array [
                                  "label:MuiInputBase-root;",
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  "label:MuiOutlinedInput-root;",
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "defaultProps": undefined,
                                "render": [Function],
                                "withComponent": [Function],
                              },
                            },
                            "defaultValue": undefined,
                            "disabled": false,
                            "endAdornment": undefined,
                            "error": false,
                            "focused": false,
                            "formControl": Object {
                              "adornedStart": false,
                              "color": "primary",
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "fullWidth": true,
                              "hiddenLabel": false,
                              "onBlur": [Function],
                              "onEmpty": [Function],
                              "onFilled": [Function],
                              "onFocus": [Function],
                              "registerEffect": [Function],
                              "required": false,
                              "setAdornedStart": [Function],
                              "size": "medium",
                              "variant": "outlined",
                            },
                            "fullWidth": true,
                            "hiddenLabel": false,
                            "id": "fullWidth",
                            "inputComponent": "input",
                            "inputProps": undefined,
                            "inputRef": undefined,
                            "maxRows": undefined,
                            "minRows": undefined,
                            "multiline": false,
                            "name": undefined,
                            "onBlur": undefined,
                            "onChange": [Function],
                            "onFocus": undefined,
                            "placeholder": undefined,
                            "renderSuffix": [Function],
                            "rows": undefined,
                            "size": "medium",
                            "startAdornment": undefined,
                            "type": "text",
                            "value": "",
                          }
                        }
                      >
                        <Noop />
                        <div
                          className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-md26zr-MuiInputBase-root-MuiOutlinedInput-root"
                          onClick={[Function]}
                        >
                          <MuiOutlinedInputInput
                            aria-invalid={false}
                            as="input"
                            autoFocus={false}
                            className="MuiOutlinedInput-input MuiInputBase-input"
                            disabled={false}
                            id="fullWidth"
                            onAnimationStart={[Function]}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            ownerState={
                              Object {
                                "aria-describedby": undefined,
                                "autoComplete": undefined,
                                "autoFocus": false,
                                "classes": Object {
                                  "input": "MuiOutlinedInput-input",
                                  "notchedOutline": null,
                                  "root": "MuiOutlinedInput-root",
                                },
                                "color": "primary",
                                "components": Object {
                                  "Input": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "__emotion_base": "input",
                                    "__emotion_forwardProp": [Function],
                                    "__emotion_real": [Circular],
                                    "__emotion_styles": Array [
                                      "label:MuiInputBase-input;",
                                      [Function],
                                      [Function],
                                      [Function],
                                      "label:MuiOutlinedInput-input;",
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "defaultProps": undefined,
                                    "render": [Function],
                                    "withComponent": [Function],
                                  },
                                  "Root": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "__emotion_base": "div",
                                    "__emotion_forwardProp": [Function],
                                    "__emotion_real": [Circular],
                                    "__emotion_styles": Array [
                                      "label:MuiInputBase-root;",
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      "label:MuiOutlinedInput-root;",
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "defaultProps": undefined,
                                    "render": [Function],
                                    "withComponent": [Function],
                                  },
                                },
                                "defaultValue": undefined,
                                "disabled": false,
                                "endAdornment": undefined,
                                "error": false,
                                "focused": false,
                                "formControl": Object {
                                  "adornedStart": false,
                                  "color": "primary",
                                  "disabled": false,
                                  "error": false,
                                  "filled": false,
                                  "focused": false,
                                  "fullWidth": true,
                                  "hiddenLabel": false,
                                  "onBlur": [Function],
                                  "onEmpty": [Function],
                                  "onFilled": [Function],
                                  "onFocus": [Function],
                                  "registerEffect": [Function],
                                  "required": false,
                                  "setAdornedStart": [Function],
                                  "size": "medium",
                                  "variant": "outlined",
                                },
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "id": "fullWidth",
                                "inputComponent": "input",
                                "inputProps": undefined,
                                "inputRef": undefined,
                                "maxRows": undefined,
                                "minRows": undefined,
                                "multiline": false,
                                "name": undefined,
                                "onBlur": undefined,
                                "onChange": [Function],
                                "onFocus": undefined,
                                "placeholder": undefined,
                                "renderSuffix": [Function],
                                "rows": undefined,
                                "size": "medium",
                                "startAdornment": undefined,
                                "type": "text",
                                "value": "",
                              }
                            }
                            required={false}
                            type="text"
                            value=""
                          >
                            <Noop />
                            <input
                              aria-invalid={false}
                              autoFocus={false}
                              className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                              disabled={false}
                              id="fullWidth"
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              required={false}
                              type="text"
                              value=""
                            />
                          </MuiOutlinedInputInput>
                          <MuiOutlinedInputNotchedOutline
                            className="MuiOutlinedInput-notchedOutline"
                            label="Url"
                            notched={false}
                          >
                            <Noop />
                            <NotchedOutline
                              className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                              label="Url"
                              notched={false}
                            >
                              <Styled(fieldset)
                                aria-hidden={true}
                                className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                ownerState={
                                  Object {
                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                    "label": "Url",
                                    "notched": false,
                                    "withLabel": true,
                                  }
                                }
                              >
                                <Noop />
                                <fieldset
                                  aria-hidden={true}
                                  className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                >
                                  <Styled(legend)
                                    ownerState={
                                      Object {
                                        "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                        "label": "Url",
                                        "notched": false,
                                        "withLabel": true,
                                      }
                                    }
                                  >
                                    <Noop />
                                    <legend
                                      className="css-173wfxe"
                                    >
                                      <span>
                                        Url
                                      </span>
                                    </legend>
                                  </Styled(legend)>
                                </fieldset>
                              </Styled(fieldset)>
                            </NotchedOutline>
                          </MuiOutlinedInputNotchedOutline>
                        </div>
                      </MuiOutlinedInputRoot>
                    </ForwardRef(InputBase)>
                  </ForwardRef(OutlinedInput)>
                </div>
              </MuiFormControlRoot>
            </ForwardRef(FormControl)>
          </MuiTextFieldRoot>
        </ForwardRef(TextField)>
         
      </div>
      <div
        className="flex items-center justify-center w-full"
        id="submit"
        onClick={[Function]}
      >
        <ForwardRef(Button)
          variant="contained"
        >
          <MuiButtonRoot
            className=""
            classes={
              Object {
                "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                "label": "MuiButton-label",
                "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
              }
            }
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName=""
            ownerState={
              Object {
                "children": <span
                  className="font-bold"
                >
                  Create
                </span>,
                "color": "primary",
                "component": "button",
                "disableElevation": false,
                "disableFocusRipple": false,
                "disabled": false,
                "fullWidth": false,
                "size": "medium",
                "type": undefined,
                "variant": "contained",
              }
            }
          >
            <Noop />
            <ForwardRef(ButtonBase)
              className=" css-1yu95zv-MuiButton-root"
              classes={
                Object {
                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                  "label": "MuiButton-label",
                  "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                }
              }
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName=""
            >
              <MuiButtonBaseRoot
                as="button"
                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root  css-1yu95zv-MuiButton-root"
                classes={
                  Object {
                    "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                    "label": "MuiButton-label",
                    "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                    "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                  }
                }
                disabled={false}
                onBlur={[Function]}
                onContextMenu={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                ownerState={
                  Object {
                    "centerRipple": false,
                    "children": Array [
                      undefined,
                      <span
                        className="font-bold"
                      >
                        Create
                      </span>,
                      undefined,
                    ],
                    "className": " css-1yu95zv-MuiButton-root",
                    "classes": Object {
                      "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                      "label": "MuiButton-label",
                      "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                      "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                    },
                    "component": "button",
                    "disableRipple": false,
                    "disableTouchRipple": false,
                    "disabled": false,
                    "focusRipple": true,
                    "focusVisible": false,
                    "focusVisibleClassName": "",
                    "tabIndex": 0,
                    "type": undefined,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <Noop />
                <button
                  className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root  css-sghohy-MuiButtonBase-root-MuiButton-root"
                  disabled={false}
                  onBlur={[Function]}
                  onContextMenu={[Function]}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={0}
                  type="button"
                >
                  <span
                    className="font-bold"
                  >
                    Create
                  </span>
                  <ForwardRef(TouchRipple)
                    center={false}
                  >
                    <MuiTouchRippleRoot
                      className="MuiTouchRipple-root"
                    >
                      <Noop />
                      <span
                        className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                      >
                        <TransitionGroup
                          childFactory={[Function]}
                          component={null}
                          exit={true}
                        />
                      </span>
                    </MuiTouchRippleRoot>
                  </ForwardRef(TouchRipple)>
                </button>
              </MuiButtonBaseRoot>
            </ForwardRef(ButtonBase)>
          </MuiButtonRoot>
        </ForwardRef(Button)>
      </div>
    </div>
  </div>
</Form>
`;
